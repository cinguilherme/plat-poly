{:mvn/repos {"central" {:url "https://repo1.maven.org/maven2/"}
             "clojars" {:url "https://repo.clojars.org/"}
             "confluent" {:url "https://packages.confluent.io/maven/"}}
 
 :deps {org.clojure/clojure {:mvn/version "1.11.1"}
        org.clojure/core.async {:mvn/version "1.6.681"}
        org.clojure/spec.alpha {:mvn/version "0.3.218"}
        nubank/state-flow {:mvn/version "2.2.4"}
        prismatic/schema {:mvn/version "1.4.1"}
        environ/environ {:mvn/version "1.2.0"}
        clj-time/clj-time {:mvn/version "0.15.2"}
        criterium/criterium {:mvn/version "0.4.6"}
        medley/medley {:mvn/version "1.3.0"}
        com.stuartsierra/component {:mvn/version "1.1.0"}
        org.clojure/tools.logging {:mvn/version "1.2.3"}
        org.apache.logging.log4j/log4j-api {:mvn/version "2.17.1"}
        org.apache.logging.log4j/log4j-core {:mvn/version "2.17.1"}
        org.apache.logging.log4j/log4j-slf4j-impl {:mvn/version "2.17.1"}}

 :aliases  {:dev {:extra-paths ["development/src"
                                "development/resources"
                                "components/common/src"
                                "components/common/resources"
                                "components/client_http/src"
                                "components/client_http/resources"
                                "components/elastic_search/src"
                                "components/elastic_search/resources"
                                "components/sqs_consumer/src"
                                "components/sqs_consumer/resources"
                                "components/sqs_producer/src"
                                "components/sqs_producer/resources"
                                "components/kafka_producer/src"
                                "components/kafka_producer/resources"
                                "components/kafka_consumer/src"
                                "components/kafka_consumer/resources"
                                "components/dynamodb/src"
                                "components/dynamodb/resources"
                                "components/mongo/src"
                                "components/mongo/resources"
                                "components/redis/src"
                                "components/redis/resources"
                                "components/postgres/src"
                                "components/postgres/resources"
                                "components/s3/src"
                                "components/s3/resources"
                                "components/user/src"
                                "components/user/resources"
                                "components/pedestal/src"
                                "components/pedestal/resources"
                                "components/files/src"
                                "components/files/resources"
                                "bases/cli/src"
                                "bases/cli/resources"
                                "bases/pedestal-server/src"
                                "bases/pedestal-server/resources"]

                  :extra-deps {org.clojure/clojure {:mvn/version "1.11.1"}
                               ;; core components
                               poly/common {:local/root "components/common"}
                               ;; base level components

                               ;; components leaf level dependencies
                               poly/client-http {:local/root "components/client_http"}
                               poly/user {:local/root "components/user"}
                               poly/dynamodb {:local/root "components/dynamodb"}
                               poly/elastic-search {:local/root "components/elastic_search"}
                               poly/mongo {:local/root "components/mongo"}
                               poly/redis {:local/root "components/redis"}
                               poly/postgres {:local/root "components/postgres"}
                               poly/kafka-consumer {:local/root "components/kafka_consumer"}
                               poly/kafka-producer {:local/root "components/kafka_producer"}
                               poly/sqs-consumer {:local/root "components/sqs_consumer"}
                               poly/sqs-producer {:local/root "components/sqs_producer"}
                               poly/files {:local/root "components/files"}
                               poly/s3 {:local/root "components/s3"}

                               ;; composed component
                               poly/pedestal {:local/root "components/pedestal"} ;; pedestal HTTP server

                               ;; need component for async message processing (SQS/Kafka/Redis/In Memory Queue Messagin even)
                               ;; end of composed

                               ;; bases
                               poly/pedestal-server {:local/root "bases/pedestal-server"}
                               poly/cli {:local/root "bases/cli"}}}

            :test {:extra-paths ["components/user/test"
                                 "bases/cli/test"]}

            :build {:deps {io.github.seancorfield/build-clj {:git/tag "v0.9.2" :git/sha "9c9f078"}}
                    :paths ["build/resources"]
                    :ns-default build}

            :poly {:main-opts ["-m" "polylith.clj.core.poly-cli.core"]
                   :extra-deps {polyfy/polylith
                                {:git/url   "https://github.com/polyfy/polylith"
                                 :sha       "b3dcc8bbb315dfd2a9b8d011c3195c4b617ffd0b"
                                 :deps/root "projects/poly"}


                                org.clojure/clojure {:mvn/version "1.11.1"
                                                     :exclusions [org.clojure/spec.alpha]
                                                     :scope      "provided"}}}}}