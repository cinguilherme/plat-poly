version: "3"

services:
  localstack-poly-plat:
    image: localstack/localstack:latest

    #ports for SQS, DynamoDB, S3, Lambda
    ports:
      - "4566:4566"
      - "4571:4571"
      - "4572:4572"
      - "4574:4574"

    environment:
      - SERVICES=s3,sqs,dynamodb,lambda
      - DEBUG=1
      - DATA_DIR=/tmp/localstack/data
      - LAMBDA_EXECUTOR=docker-reuse
      - LAMBDA_REMOTE_DOCKER=false
      - LAMBDA_REMOVE_CONTAINERS=true
      - LAMBDA_DOCKER_NETWORK=localstack
      - LAMBDA_CONTAINER_REGISTRY=local
      - LAMBDA_TMP_DIR=/tmp/lambda
      - DOCKER_HOST=unix:///var/run/docker.sock
      - HOST_TMP_FOLDER=/tmp/localstack
      - AWS_DEFAULT_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=foo
      - AWS_SECRET_ACCESS_KEY=bar

      - PORT_WEB_UI=9080

      ## S3 ENVS LOCAL DEVELOPMENT
      - S3_BUCKET=localstack
      - S3_ENDPOINT=http://localstack-poly-plat:4572
      - S3_REGION=us-east-1
      - S3_USE_HTTPS=false
      - S3_VERIFY_SSL=false
      - S3_FORCE_PATH_STYLE=true

    volumes:
      - "./localstack-data:/var/lib/localstack" # Maps the local directory to the container directory
      - "/var/run/docker.sock:/var/run/docker.sock" # Allows the LocalStack container to communicate with the Docker daemon
      - ./aws-local-setup:/etc/localstack/init/ready.d

  postgres-poly-play:
    image: postgres:latest
    environment:
      POSTGRES_DB: your_database
      POSTGRES_USER: your_user
      POSTGRES_PASSWORD: your_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  kafka-poly-play:
    image: wurstmeister/kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"

  minio:
    image: minio/minio
    volumes:
      - minio_data:/data
    ports:
      - "9000:9000"
    environment:
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: minio123
    command: server /data

volumes:
  minio_data:
  postgres_data:
